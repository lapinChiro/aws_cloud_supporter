{{!-- src/templates/cdk-official.hbs (新規作成) --}}
{{!-- 要件: aws-cdk-lib公式型使用、CLAUDE.md準拠: Type-Driven Development --}}
import * as cdk from 'aws-cdk-lib';
import * as cloudwatch from 'aws-cdk-lib/aws-cloudwatch';
{{#if snsConfiguration}}
import * as sns from 'aws-cdk-lib/aws-sns';
import * as cloudwatchActions from 'aws-cdk-lib/aws-cloudwatch-actions';
{{/if}}
import { Construct } from 'constructs';

/**
 * CloudWatch Alarms Stack with AWS Official Types
 * Generated by AWS Cloud Supporter v1.0.0
 * 
 * Source Template: {{metadata.templatePath}}
 * Generated: {{metadata.generatedAt}}
 * Total Resources: {{metadata.totalResources}}
 * Total Alarms: {{metadata.totalAlarms}}
 * 
 * Uses aws-cdk-lib official types for maximum compatibility:
 * - cloudwatch.AlarmProps for alarm definitions
 * - sns.TopicProps for SNS topic configuration
 * - Complete type safety with TypeScript strict mode
 * 
 * Installation requirements:
 * npm install aws-cdk-lib@^2.80.0 constructs@^10.0.0
 */
export class {{stackClassName}} extends cdk.Stack {
  constructor(scope: Construct, id: string, props?: cdk.StackProps) {
    super(scope, id, props);

{{#if snsConfiguration}}
    // SNS Topic (aws-cdk-lib official sns.TopicProps)
    const {{snsConfiguration.variableName}} = {{#if snsConfiguration.isExisting}}sns.Topic.fromTopicArn(
      this,
      'AlarmNotificationTopic',
      '{{snsConfiguration.topicArn}}'
    );{{else}}new sns.Topic(this, 'AlarmNotificationTopic', {{renderTopicProps snsConfiguration.topicProps}});{{/if}}

{{/if}}
{{#if alarms}}
{{#each alarms}}
    /**
     * {{alarmDescription}}
     * Resource: {{resourceType}} ({{resourceLogicalId}})
     * Severity: {{severity}}
     * Threshold: {{threshold}}
     * 
     * Uses aws-cdk-lib official cloudwatch.AlarmProps
     */
    const {{constructId}} = new cloudwatch.Alarm(this, '{{constructId}}', {
      // AWS公式cloudwatch.AlarmPropsプロパティ
      metric: {{renderCompleteMetric metricForTemplate}},
      threshold: {{threshold}},
      alarmDescription: '{{alarmDescription}}',
      {{#if evaluationPeriods}}evaluationPeriods: {{evaluationPeriods}},{{/if}}
      {{#if treatMissingData}}treatMissingData: {{renderTreatMissingData treatMissingData}},{{/if}}
      {{#if comparisonOperator}}comparisonOperator: {{renderComparisonOperator comparisonOperator}},{{/if}}
      {{#if datapointsToAlarm}}datapointsToAlarm: {{datapointsToAlarm}}{{/if}}
    });

{{#if ../snsConfiguration}}
    // SNS通知アクション追加
    {{constructId}}.addAlarmAction(new cloudwatchActions.SnsAction({{../snsConfiguration.variableName}}));
{{/if}}

{{/each}}
{{else}}
    // No alarms generated - no supported resources found
    // This occurs when filtering results in no matching resources
    // or when no metrics are defined for the analyzed resources
{{/if}}
  }
}