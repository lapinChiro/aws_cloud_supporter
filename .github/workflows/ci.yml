name: CI

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'release/**'
      - 'hotfix/**'
  pull_request:
    branches:
      - main
      - develop

# 権限を明示的に設定（セキュリティのベストプラクティス）
permissions:
  contents: read

# 環境変数の設定
env:
  NODE_ENV: test

# 並列実行とキャンセレーション設定
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # 依存関係のインストールと基本チェック
  setup:
    name: Setup and Cache Dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Generate cache key
        id: cache-key
        run: echo "key=${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT
      
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 20.x
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --no-audit --prefer-offline

  # コード品質チェック（並列実行）
  lint:
    name: Lint and Code Quality
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 20.x
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --no-audit --prefer-offline
      
      - name: Build project (required for knip)
        run: npm run build
      
      - name: Run knip (unused code check)
        run: npm run knip
      
      - name: Run ESLint
        run: npm run lint

  # 型チェック（並列実行）
  typecheck:
    name: TypeScript Type Check
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 20.x
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --no-audit --prefer-offline
      
      - name: Run TypeScript type check
        run: npm run typecheck

  # テストとビルド（マトリックス戦略）
  test-and-build:
    name: Test and Build (Node ${{ matrix.node-version }})
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 22.x]
      fail-fast: false  # 1つのバージョンが失敗しても他を続行
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --no-audit --prefer-offline
      
      - name: Build project
        run: npm run build
      
      - name: Run tests
        run: npm test
      
      # カバレッジレポート（Node 20.xのみ）
      - name: Generate test coverage
        if: matrix.node-version == '20.x'
        run: npm run test:coverage
      
      - name: Upload coverage reports
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-${{ matrix.node-version }}
          fail_ci_if_error: false

  # すべてのチェックが成功したことを確認する最終ジョブ
  # ブランチプロテクションルールではこのジョブを必須にする
  all-checks-passed:
    name: All Checks Passed
    if: always()
    needs: [lint, typecheck, test-and-build]
    runs-on: ubuntu-latest
    steps:
      - name: Check all job statuses
        run: |
          if [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
            echo "One or more jobs failed"
            exit 1
          fi
          echo "All checks passed successfully!"