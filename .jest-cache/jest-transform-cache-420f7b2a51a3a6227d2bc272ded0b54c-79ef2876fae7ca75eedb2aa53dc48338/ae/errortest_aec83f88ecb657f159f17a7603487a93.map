{"file":"/home/kyohei/aws_cloud_supporter/tests/unit/utils/error.test.ts","mappings":";AAAA,yCAAyC;;;;;AAEzC,2BAAkC;AAClC,gDAAwB;AAExB,QAAQ,CAAC,kCAAkC,EAAE,GAAG,EAAE;IAEhD,cAAc;IACd,EAAE,CAAC,qCAAqC,EAAE,GAAG,EAAE;QAC7C,MAAM,WAAW,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAExD,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC;QAC/C,MAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC,WAAW,EAAE,CAAC;QACtD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC;QAC5C,MAAM,CAAC,OAAO,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,cAAc;IACd,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAC1C,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAE1D,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAClD,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACxD,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,4BAA4B;IAC5B,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;QACjD,MAAM,EAAE,mBAAmB,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAE/E,MAAM,SAAS,GAAG,IAAI,mBAAmB,CACvC,SAAS,CAAC,UAAU,EACpB,oBAAoB,EACpB,EAAE,aAAa,EAAE,MAAM,EAAE,EACzB,iBAAiB,EACjB,EAAE,CACH,CAAC;QAEF,MAAM,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QACxC,MAAM,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;QACtD,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAClD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACrD,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACnD,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,uBAAuB;IACvB,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC/C,MAAM,EAAE,mBAAmB,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAE/E,MAAM,SAAS,GAAG,IAAI,mBAAmB,CACvC,SAAS,CAAC,UAAU,EACpB,gBAAgB,CACjB,CAAC;QAEF,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAEtD,MAAM,UAAU,GAAG,SAAS,CAAC,kBAAkB,EAAE,CAAC;QAClD,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5C,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAClD,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,4BAA4B;IAC5B,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAE1D,yBAAyB;QACzB,qBAAqB;QACrB,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAClD,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACxD,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,4BAA4B;IAC5B,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;QACpD,MAAM,SAAS,GAAG,IAAA,iBAAY,EAC5B,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,6BAA6B,CAAC,EACnD,MAAM,CACP,CAAC;QACF,MAAM,CAAC,SAAS,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,mBAAmB;IACnB,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;QAC5D,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAE7D,mBAAmB;QACnB,MAAM,CAAC,OAAO,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpD,MAAM,CAAC,OAAO,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEtD,6BAA6B;QAC7B,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU;IACvE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;IAEzC,mBAAmB;IACnB,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC5C,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAE7E,MAAM,SAAS,GAAG,eAAe,CAC/B,yBAAyB,EACzB,wBAAwB,EACxB,EAAE,QAAQ,EAAE,CAAC,EAAE,CAChB,CAAC;QAEF,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAC1D,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,wBAAwB;IACxB,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACtD,MAAM,EAAE,gBAAgB,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAE/E,MAAM,UAAU,GAAG,gBAAgB,CACjC,mBAAmB,EACnB,gBAAgB,EAChB,EAAE,EACF,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAClD,CAAC;QAEF,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACvC,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,mBAAmB;IACnB,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAClD,MAAM,EAAE,mBAAmB,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAErF,MAAM,aAAa,GAAG,mBAAmB,CACvC,2BAA2B,EAC3B,EAAE,aAAa,EAAE,kCAAkC,EAAE,CACtD,CAAC;QAEF,MAAM,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClD,MAAM,CAAC,aAAa,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;IAEH,iBAAiB;IACjB,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC/C,MAAM,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAEjF,MAAM,WAAW,GAAG,iBAAiB,CACnC,6BAA6B,EAC7B,EAAE,QAAQ,EAAE,qBAAqB,EAAE,KAAK,EAAE,QAAQ,EAAE,CACrD,CAAC;QAEF,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,iBAAiB;IACjB,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;QACpD,MAAM,EACJ,eAAe,EACf,WAAW,EACX,YAAY,EACZ,eAAe,EACf,aAAa,EACd,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAExC,MAAM,SAAS,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;QAE1C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/C,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE7C,mBAAmB;QACnB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3C,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/home/kyohei/aws_cloud_supporter/tests/unit/utils/error.test.ts"],"sourcesContent":["// CLAUDE.md準拠エラーハンドリングテスト（RED段階: KISS原則）\n\nimport { readFileSync } from 'fs';\nimport path from 'path';\n\ndescribe('エラーハンドリングシステム（CLAUDE.md: KISS原則）', () => {\n  \n  // エラーハンドラ実装確認\n  it('should implement ErrorHandler class', () => {\n    const errorModule = require('../../../src/utils/error');\n    \n    expect(errorModule.ErrorHandler).toBeDefined();\n    expect(errorModule.CloudSupporterError).toBeDefined();\n    expect(errorModule.ErrorType).toBeDefined();\n    expect(typeof errorModule.ErrorHandler.handle).toBe('function');\n  });\n\n  // エラータイプ列挙テスト\n  it('should define proper error types', () => {\n    const { ErrorType } = require('../../../src/utils/error');\n    \n    expect(ErrorType.FILE_ERROR).toBe('FILE_ERROR');\n    expect(ErrorType.PARSE_ERROR).toBe('PARSE_ERROR');\n    expect(ErrorType.RESOURCE_ERROR).toBe('RESOURCE_ERROR');\n    expect(ErrorType.OUTPUT_ERROR).toBe('OUTPUT_ERROR');\n  });\n\n  // CloudSupporterErrorクラステスト\n  it('should define CloudSupporterError class', () => {\n    const { CloudSupporterError, ErrorType } = require('../../../src/utils/error');\n    \n    const testError = new CloudSupporterError(\n      ErrorType.FILE_ERROR,\n      'Test error message',\n      { originalError: 'test' },\n      '/test/path.yaml',\n      42\n    );\n    \n    expect(testError).toBeInstanceOf(Error);\n    expect(testError).toBeInstanceOf(CloudSupporterError);\n    expect(testError.type).toBe(ErrorType.FILE_ERROR);\n    expect(testError.message).toBe('Test error message');\n    expect(testError.filePath).toBe('/test/path.yaml');\n    expect(testError.lineNumber).toBe(42);\n  });\n\n  // エラーメッセージテスト（ユーザビリティ）\n  it('should provide helpful error messages', () => {\n    const { CloudSupporterError, ErrorType } = require('../../../src/utils/error');\n    \n    const fileError = new CloudSupporterError(\n      ErrorType.FILE_ERROR, \n      'File not found'\n    );\n    \n    expect(fileError.message).toContain('File not found');\n    \n    const structured = fileError.toStructuredOutput();\n    expect(structured.error).toBe('FILE_ERROR');\n    expect(structured.message).toBe('File not found');\n    expect(structured.timestamp).toBeDefined();\n  });\n\n  // 終了コードテスト（UNIX Philosophy）\n  it('should set correct exit codes', () => {\n    const { ErrorType } = require('../../../src/utils/error');\n    \n    // プライベートメソッドは直接テストできないが、\n    // ErrorTypeごとの期待値を確認\n    expect(ErrorType.FILE_ERROR).toBe('FILE_ERROR');\n    expect(ErrorType.PARSE_ERROR).toBe('PARSE_ERROR');\n    expect(ErrorType.RESOURCE_ERROR).toBe('RESOURCE_ERROR');\n    expect(ErrorType.OUTPUT_ERROR).toBe('OUTPUT_ERROR');\n  });\n\n  // CLAUDE.md: No any types検証\n  it('should not use any types in error handling', () => {\n    const errorCode = readFileSync(\n      path.join(__dirname, '../../../src/utils/error.ts'),\n      'utf8'\n    );\n    expect(errorCode).toHaveNoAnyTypes();\n  });\n\n  // KISS原則テスト（複雑性回避）\n  it('should keep error handling simple (KISS principle)', () => {\n    const { ErrorHandler } = require('../../../src/utils/error');\n    \n    // シンプルなAPIであることを確認\n    expect(typeof ErrorHandler.handle).toBe('function');\n    expect(typeof ErrorHandler.logError).toBe('function');\n    \n    // 複雑な継承やファクトリパターンを避けていることを確認\n    expect(ErrorHandler.handle.length).toBeLessThanOrEqual(1); // 引数は1個のみ\n  });\n});\n\ndescribe('エラー処理フロー（CLAUDE.md: 型安全性）', () => {\n\n  // ファイルエラーヘルパー関数テスト\n  it('should handle file errors properly', () => {\n    const { createFileError, isFileError } = require('../../../src/utils/error');\n    \n    const fileError = createFileError(\n      'Template file not found', \n      '/path/to/template.yaml',\n      { fileSize: 0 }\n    );\n    \n    expect(isFileError(fileError)).toBe(true);\n    expect(fileError.filePath).toBe('/path/to/template.yaml');\n    expect(fileError.details?.fileSize).toBe(0);\n  });\n\n  // 構文エラーハンドリングテスト（行番号情報）\n  it('should handle parse errors with line numbers', () => {\n    const { createParseError, isParseError } = require('../../../src/utils/error');\n    \n    const parseError = createParseError(\n      'YAML syntax error',\n      '/template.yaml',\n      15,\n      { columnNumber: 10, nearText: 'invalid: syntax' }\n    );\n    \n    expect(isParseError(parseError)).toBe(true);\n    expect(parseError.lineNumber).toBe(15);\n    expect(parseError.details?.columnNumber).toBe(10);\n  });\n\n  // リソースエラーハンドリングテスト\n  it('should handle resource errors gracefully', () => {\n    const { createResourceError, isResourceError } = require('../../../src/utils/error');\n    \n    const resourceError = createResourceError(\n      'Unsupported resource type',\n      { originalError: 'AWS::EC2::Instance not supported' }\n    );\n    \n    expect(isResourceError(resourceError)).toBe(true);\n    expect(resourceError.details?.originalError).toContain('AWS::EC2::Instance');\n  });\n\n  // 出力エラーハンドリングテスト\n  it('should handle output errors correctly', () => {\n    const { createOutputError, isOutputError } = require('../../../src/utils/error');\n    \n    const outputError = createOutputError(\n      'Failed to write output file',\n      { filePath: '/output/report.html', error: 'EACCES' }\n    );\n    \n    expect(isOutputError(outputError)).toBe(true);\n    expect(outputError.details?.error).toBe('EACCES');\n  });\n\n  // 型ガード関数の型安全性テスト\n  it('should provide type-safe error type guards', () => {\n    const { \n      createFileError,\n      isFileError,\n      isParseError,\n      isResourceError,\n      isOutputError \n    } = require('../../../src/utils/error');\n    \n    const fileError = createFileError('test');\n    \n    expect(isFileError(fileError)).toBe(true);\n    expect(isParseError(fileError)).toBe(false);\n    expect(isResourceError(fileError)).toBe(false);\n    expect(isOutputError(fileError)).toBe(false);\n    \n    // 非エラーオブジェクトでfalse\n    expect(isFileError(null)).toBe(false);\n    expect(isFileError(undefined)).toBe(false);\n    expect(isFileError({})).toBe(false);\n  });\n});"],"version":3}