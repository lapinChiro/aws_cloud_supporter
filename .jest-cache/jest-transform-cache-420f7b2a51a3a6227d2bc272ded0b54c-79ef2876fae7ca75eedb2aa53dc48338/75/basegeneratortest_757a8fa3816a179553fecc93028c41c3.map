{"file":"/home/kyohei/aws_cloud_supporter/tests/unit/generators/base.generator.test.ts","mappings":"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","names":[],"sources":["/home/kyohei/aws_cloud_supporter/tests/unit/generators/base.generator.test.ts"],"sourcesContent":["// CLAUDE.md準拠BaseMetricsGeneratorテスト（RED段階: SOLID抽象化原則 + Type-Driven）\n\nimport { readFileSync } from 'fs';\nimport path from 'path';\n\ndescribe('BaseMetricsGenerator抽象クラス（CLAUDE.md: TDD RED段階）', () => {\n\n  // RED段階: BaseMetricsGeneratorが存在しないことを確認\n  it('should fail until BaseMetricsGenerator is implemented', () => {\n    expect(() => {\n      require('../../../src/generators/base.generator');\n    }).toThrow(); // まだファイル未実装で失敗\n  });\n\n  // 抽象クラス設計テスト（実装前失敗想定）\n  it('should define proper abstract base class', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // IMetricsGeneratorインターフェース実装テスト（実装前失敗想定）\n  it('should implement IMetricsGenerator interface', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // 動的しきい値計算テスト（実装前失敗想定）\n  it('should calculate dynamic thresholds correctly', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // リソーススケール係数計算テスト（実装前失敗想定）\n  it('should compute resource scale factors', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // メトリクス生成パフォーマンステスト（実装前失敗想定）\n  it('should generate metrics within 1 second', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // 適用可能メトリクス判定テスト（実装前失敗想定）  \n  it('should filter applicable metrics correctly', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // CloudWatchディメンション構築テスト（実装前失敗想定）\n  it('should build CloudWatch dimensions properly', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // CLAUDE.md: No any types検証\n  it('should not use any types in base generator implementation', () => {\n    // ファイルが存在しないので失敗する想定\n    try {\n      const baseGeneratorCode = readFileSync(\n        path.join(__dirname, '../../../src/generators/base.generator.ts'),\n        'utf8'\n      );\n      expect(baseGeneratorCode).toHaveNoAnyTypes();\n    } catch {\n      expect(true).toBe(false); // ファイル未実装で失敗（RED段階）\n    }\n  });\n\n  // 抽象メソッド定義テスト（実装前失敗想定）\n  it('should define required abstract methods', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // エラーハンドリング統合テスト（実装前失敗想定）\n  it('should integrate with CloudSupporterError system', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n});\n\ndescribe('BaseMetricsGenerator動的しきい値（CLAUDE.md: アルゴリズム要件）', () => {\n\n  // しきい値計算アルゴリズムテスト（実装前失敗想定）\n  it('should implement threshold calculation algorithm', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // スケール係数反映テスト（実装前失敗想定）\n  it('should apply resource scale factors to thresholds', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // しきい値妥当性検証テスト（実装前失敗想定）\n  it('should ensure warning < critical threshold validity', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // 数値精度テスト（実装前失敗想定）\n  it('should maintain numerical precision in calculations', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // 境界値テスト（実装前失敗想定）\n  it('should handle edge cases in threshold calculation', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n});\n\ndescribe('BaseMetricsGeneratorパフォーマンス（CLAUDE.md: 性能要件）', () => {\n\n  // 1秒以内生成要件テスト（実装前失敗想定）\n  it('should generate metrics within performance limits', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // メモリ効率テスト（実装前失敗想定）\n  it('should generate metrics without memory leaks', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // 並行生成テスト（実装前失敗想定）\n  it('should support concurrent metric generation', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // パフォーマンス監視テスト（実装前失敗想定）\n  it('should provide performance monitoring', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n});\n\ndescribe('BaseMetricsGenerator型安全性（CLAUDE.md: Type-Driven Development）', () => {\n\n  // CloudFormationResource型統合テスト（実装前失敗想定）\n  it('should work with CloudFormationResource types', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // MetricDefinition型生成テスト（実装前失敗想定）\n  it('should generate type-safe MetricDefinition objects', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // MetricConfig型処理テスト（実装前失敗想定）\n  it('should process MetricConfig types safely', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // 型安全なGenerics使用テスト（実装前失敗想定）\n  it('should utilize type-safe generics properly', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // 条件付きメトリクス型安全性テスト（実装前失敗想定）\n  it('should handle applicableWhen functions type-safely', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n});\n\ndescribe('BaseMetricsGeneratorSOLID原則（CLAUDE.md: 設計原則）', () => {\n\n  // 単一責任原則テスト（実装前失敗想定）\n  it('should follow Single Responsibility Principle', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // 開放閉鎖原則テスト（実装前失敗想定）\n  it('should follow Open/Closed Principle', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // インターフェース分離テスト（実装前失敗想定）\n  it('should follow Interface Segregation Principle', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // 依存関係逆転テスト（実装前失敗想定）\n  it('should follow Dependency Inversion Principle', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n\n  // リスコフ置換原則テスト（実装前失敗想定）\n  it('should follow Liskov Substitution Principle', async () => {\n    expect(true).toBe(false); // 意図的に失敗（RED段階）\n  });\n});"],"version":3}