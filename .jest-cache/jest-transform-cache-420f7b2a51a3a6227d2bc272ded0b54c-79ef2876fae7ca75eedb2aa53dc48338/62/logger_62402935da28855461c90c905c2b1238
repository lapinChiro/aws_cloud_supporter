7b9806295e416652a21d707f54738172
"use strict";
// CLAUDE.mdÊ∫ñÊã†LoggerÔºàKISSÂéüÂâá„ÄÅ„Ç∑„É≥„Éó„É´ÂÆüË£ÖÔºâ
Object.defineProperty(exports, "__esModule", { value: true });
exports.Logger = void 0;
exports.createLogger = createLogger;
exports.isValidLogLevel = isValidLogLevel;
// „Ç∑„É≥„Éó„É´„Å™Ëâ≤‰ªò„ÅçÂá∫ÂäõÔºàCLAUDE.md: KISS„ÄÅÂ§ñÈÉ®‰æùÂ≠òÊúÄÂ∞èÂåñÔºâ
const colors = {
    debug: (text) => `\x1b[36m${text}\x1b[0m`, // cyan
    info: (text) => `\x1b[32m${text}\x1b[0m`, // green
    warn: (text) => `\x1b[33m${text}\x1b[0m`, // yellow
    error: (text) => `\x1b[31m${text}\x1b[0m`, // red
    success: (text) => `\x1b[92m${text}\x1b[0m` // bright green
};
// CLAUDE.mdÊ∫ñÊã†Logger„ÇØ„É©„ÇπÔºàUNIX Philosophy: ‰∏Ä„Å§„ÅÆ„Åì„Å®„Çí„ÅÜ„Åæ„Åè„ÇÑ„ÇãÔºâ
class Logger {
    level;
    useColors;
    constructor(level = 'info', useColors = true) {
        this.level = level;
        this.useColors = useColors;
    }
    // „Éá„Éê„ÉÉ„Ç∞„É°„ÉÉ„Çª„Éº„Ç∏ÔºàÈñãÁô∫ÊôÇÁî®Ôºâ
    debug(message, ...args) {
        if (this.shouldLog('debug')) {
            this.output('debug', `üêõ ${message}`, ...args);
        }
    }
    // ÊÉÖÂ†±„É°„ÉÉ„Çª„Éº„Ç∏ÔºàÈÄöÂ∏∏ÈÅãÁî®Ôºâ
    info(message, ...args) {
        if (this.shouldLog('info')) {
            this.output('info', `‚ÑπÔ∏è  ${message}`, ...args);
        }
    }
    // Ë≠¶Âëä„É°„ÉÉ„Çª„Éº„Ç∏ÔºàÊ≥®ÊÑèÂñöËµ∑Ôºâ
    warn(message, ...args) {
        if (this.shouldLog('warn')) {
            this.output('warn', `‚ö†Ô∏è  ${message}`, ...args);
        }
    }
    // „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏ÔºàÂïèÈ°åÂ†±ÂëäÔºâ
    error(message, error, ...args) {
        if (this.shouldLog('error')) {
            this.output('error', `‚ùå ${message}`, ...(error ? [error.message, ...args] : args));
        }
    }
    // ÊàêÂäü„É°„ÉÉ„Çª„Éº„Ç∏ÔºàÂá¶ÁêÜÂÆå‰∫ÜÔºâ
    success(message, ...args) {
        if (this.shouldLog('info')) {
            this.output('success', `‚úÖ ${message}`, ...args);
        }
    }
    // „É≠„Ç∞„É¨„Éô„É´Âà§ÂÆöÔºàCLAUDE.md: Type-Driven DevelopmentÔºâ
    shouldLog(level) {
        const levels = {
            debug: 0,
            info: 1,
            warn: 2,
            error: 3
        };
        return levels[level] >= levels[this.level];
    }
    // Âá∫ÂäõÂá¶ÁêÜÔºàÂûãÂÆâÂÖ®ÊÄßÈáçË¶ñÔºâ
    output(level, message, ...args) {
        const timestamp = new Date().toISOString();
        const coloredMessage = this.useColors ? colors[level](message) : message;
        // „É¨„Éô„É´Âà•Âá∫ÂäõÂÖàÔºàerror/warn„ÅØstderr„ÄÅ‰ªñ„ÅØstdoutÔºâ
        const outputStream = (level === 'error' || level === 'warn') ? console.error : console.log;
        if (args.length > 0) {
            outputStream(`${timestamp} ${coloredMessage}`, ...args);
        }
        else {
            outputStream(`${timestamp} ${coloredMessage}`);
        }
    }
    // „É≠„Ç∞„É¨„Éô„É´Â§âÊõ¥ÔºàÂÆüË°åÊôÇË™øÊï¥Áî®Ôºâ
    setLevel(level) {
        this.level = level;
    }
    // Ëâ≤‰ΩøÁî®Ë®≠ÂÆöÂ§âÊõ¥
    setColorEnabled(enabled) {
        this.useColors = enabled;
    }
    // ÁèæÂú®Ë®≠ÂÆöÂèñÂæó
    getConfig() {
        return {
            level: this.level,
            useColors: this.useColors
        };
    }
}
exports.Logger = Logger;
// „Éï„Ç°„ÇØ„Éà„É™„ÉºÈñ¢Êï∞ÔºàCLAUDE.md: Á∞°ÊΩîÊÄßÔºâ
function createLogger(level = 'info', useColors = true) {
    return new Logger(level, useColors);
}
// ÂûãÂÆâÂÖ®„Å™„É≠„Ç∞„É¨„Éô„É´Âà§ÂÆö
function isValidLogLevel(level) {
    return ['debug', 'info', 'warn', 'error'].includes(level);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,