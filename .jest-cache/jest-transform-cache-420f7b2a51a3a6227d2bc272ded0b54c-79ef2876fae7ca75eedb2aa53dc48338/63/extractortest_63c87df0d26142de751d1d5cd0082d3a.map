{"file":"/home/kyohei/aws_cloud_supporter/tests/unit/core/extractor.test.ts","mappings":"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","names":[],"sources":["/home/kyohei/aws_cloud_supporter/tests/unit/core/extractor.test.ts"],"sourcesContent":["// CLAUDE.md準拠ResourceExtractorテスト（GREEN段階: パフォーマンス重視 + Type-Driven）\n\nimport { readFileSync, writeFileSync, mkdirSync } from 'fs';\nimport path from 'path';\nimport { tmpdir } from 'os';\n\n// 全テストで使用する一時ディレクトリ\nlet tempDir: string;\n\n// 全テスト前の準備\nbeforeAll(() => {\n  tempDir = path.join(tmpdir(), 'aws-cloud-supporter-extractor-test');\n  try {\n    mkdirSync(tempDir, { recursive: true });\n  } catch {\n    // 既存の場合は無視\n  }\n  \n  // テストフィクスチャー作成\n  createExtractionTestFixtures();\n});\n\nfunction createExtractionTestFixtures() {\n  // 混在リソーステンプレート（サポート対象＋対象外）\n  const mixedResourcesTemplate = {\n    AWSTemplateFormatVersion: \"2010-09-09\",\n    Description: \"Mixed resources template for extraction testing\",\n    Resources: {\n      // サポート対象リソース（8個）\n      TestRDS: {\n        Type: \"AWS::RDS::DBInstance\",\n        Properties: { Engine: \"mysql\", DBInstanceClass: \"db.t3.micro\" }\n      },\n      TestLambda: {\n        Type: \"AWS::Lambda::Function\", \n        Properties: { Runtime: \"nodejs20.x\", Handler: \"index.handler\" }\n      },\n      TestServerlessFunction: {\n        Type: \"AWS::Serverless::Function\",\n        Properties: { Runtime: \"python3.11\", Handler: \"app.lambda_handler\" }\n      },\n      TestECSService: {\n        Type: \"AWS::ECS::Service\",\n        Properties: { LaunchType: \"FARGATE\", Cluster: \"test-cluster\" }\n      },\n      TestALB: {\n        Type: \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n        Properties: { Type: \"application\", Scheme: \"internet-facing\" }\n      },\n      TestDynamoDB: {\n        Type: \"AWS::DynamoDB::Table\",\n        Properties: { BillingMode: \"PAY_PER_REQUEST\" }\n      },\n      TestAPI: {\n        Type: \"AWS::ApiGateway::RestApi\",\n        Properties: { Name: \"test-api\" }\n      },\n      TestServerlessAPI: {\n        Type: \"AWS::Serverless::Api\",\n        Properties: { StageName: \"prod\" }\n      },\n      \n      // サポート対象外リソース（6個）\n      TestS3: {\n        Type: \"AWS::S3::Bucket\",\n        Properties: { BucketName: \"test-bucket\" }\n      },\n      TestEC2: {\n        Type: \"AWS::EC2::Instance\",\n        Properties: { InstanceType: \"t3.micro\" }\n      },\n      TestVPC: {\n        Type: \"AWS::EC2::VPC\",\n        Properties: { CidrBlock: \"10.0.0.0/16\" }\n      },\n      TestSNS: {\n        Type: \"AWS::SNS::Topic\",\n        Properties: { TopicName: \"test-topic\" }\n      },\n      TestNLB: {\n        Type: \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n        Properties: { Type: \"network\", Scheme: \"internal\" }\n      },\n      TestECSServiceEC2: {\n        Type: \"AWS::ECS::Service\", \n        Properties: { LaunchType: \"EC2\", Cluster: \"test-cluster\" }\n      }\n    }\n  };\n\n  writeFileSync(\n    path.join(tempDir, 'mixed-resources.json'), \n    JSON.stringify(mixedResourcesTemplate, null, 2), \n    'utf8'\n  );\n\n  // 大量リソーステンプレート（正確に500個）\n  const largeResourcesTemplate = {\n    AWSTemplateFormatVersion: \"2010-09-09\",\n    Description: \"Large resources template for performance testing\",\n    Resources: {} as Record<string, unknown>\n  };\n\n  // 500リソース生成（サポート対象150個 + 対象外350個）\n  for (let i = 0; i < 100; i++) {\n    // サポート対象リソース（100個）\n    largeResourcesTemplate.Resources[`RDS${i}`] = {\n      Type: \"AWS::RDS::DBInstance\",\n      Properties: { Engine: \"mysql\", DBInstanceClass: \"db.t3.micro\" }\n    };\n  }\n  \n  for (let i = 0; i < 50; i++) {\n    // サポート対象リソース（50個）\n    largeResourcesTemplate.Resources[`Lambda${i}`] = {\n      Type: \"AWS::Lambda::Function\",\n      Properties: { Runtime: \"nodejs20.x\" }\n    };\n  }\n\n  for (let i = 0; i < 350; i++) {\n    // サポート対象外リソース（350個）\n    largeResourcesTemplate.Resources[`S3${i}`] = {\n      Type: \"AWS::S3::Bucket\",\n      Properties: { BucketName: `test-bucket-${i}` }\n    };\n  }\n\n  writeFileSync(\n    path.join(tempDir, 'large-resources-500.json'),\n    JSON.stringify(largeResourcesTemplate, null, 2),\n    'utf8'\n  );\n\n  // ECS特殊ケーステンプレート\n  const ecsTestTemplate = {\n    AWSTemplateFormatVersion: \"2010-09-09\",\n    Resources: {\n      FargateService: {\n        Type: \"AWS::ECS::Service\",\n        Properties: { LaunchType: \"FARGATE\" }\n      },\n      EC2Service: {\n        Type: \"AWS::ECS::Service\", \n        Properties: { LaunchType: \"EC2\" }\n      },\n      FargateSpotService: {\n        Type: \"AWS::ECS::Service\",\n        Properties: {\n          CapacityProviderStrategy: [\n            { CapacityProvider: \"FARGATE_SPOT\", Weight: 1 }\n          ]\n        }\n      },\n      MixedCapacityService: {\n        Type: \"AWS::ECS::Service\",\n        Properties: {\n          CapacityProviderStrategy: [\n            { CapacityProvider: \"FARGATE\", Weight: 1 },\n            { CapacityProvider: \"EC2\", Weight: 1 }\n          ]\n        }\n      }\n    }\n  };\n\n  writeFileSync(\n    path.join(tempDir, 'ecs-test.json'),\n    JSON.stringify(ecsTestTemplate, null, 2),\n    'utf8'\n  );\n\n  // ALB/NLB判定テンプレート\n  const loadBalancerTestTemplate = {\n    AWSTemplateFormatVersion: \"2010-09-09\",\n    Resources: {\n      ApplicationLB: {\n        Type: \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n        Properties: { Type: \"application\" }\n      },\n      NetworkLB: {\n        Type: \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n        Properties: { Type: \"network\" }\n      },\n      DefaultLB: {\n        Type: \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n        Properties: { Scheme: \"internet-facing\" } // Typeなし=application\n      },\n      GatewayLB: {\n        Type: \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n        Properties: { Type: \"gateway\" }\n      }\n    }\n  };\n\n  writeFileSync(\n    path.join(tempDir, 'loadbalancer-test.json'),\n    JSON.stringify(loadBalancerTestTemplate, null, 2),\n    'utf8'\n  );\n}\n\ndescribe('ResourceExtractor高速抽出（CLAUDE.md: GREEN段階）', () => {\n\n  // GREEN段階: ResourceExtractor実装確認\n  it('should implement ResourceExtractor successfully', () => {\n    expect(() => {\n      require('../../../src/core/extractor');\n    }).not.toThrow(); // 実装完了で成功\n  });\n\n  // O(n)アルゴリズム要件テスト（GREEN段階: 実装確認）\n  it('should extract resources with O(n) algorithm', () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    const { TemplateParser } = require('../../../src/core/parser');\n    \n    const parser = new TemplateParser();\n    const extractor = new ResourceExtractor();\n    \n    // アルゴリズムの時間計算量がO(n)であることを確認\n    expect(typeof extractor.extract).toBe('function');\n    expect(extractor.extract.length).toBe(1); // 引数1個（CloudFormationTemplate）\n  });\n\n  // 500リソース・3秒以内要件テスト（GREEN段階: パフォーマンス確認）\n  it('should process 500 resources within 3 seconds', async () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    const { TemplateParser } = require('../../../src/core/parser');\n    \n    const parser = new TemplateParser();\n    const extractor = new ResourceExtractor();\n    \n    const largePath = path.join(tempDir, 'large-resources-500.json');\n    const template = await parser.parse(largePath);\n    \n    const startTime = performance.now();\n    const result = extractor.extract(template);\n    const duration = performance.now() - startTime;\n    \n    expect(duration).toBeLessThan(3000); // 3秒以内\n    expect(result.totalCount).toBe(500);\n    expect(result.extractionTimeMs).toBeLessThan(3000);\n  });\n\n  // 8つのサポート対象リソース判定テスト（GREEN段階: 正確性確認）\n  it('should accurately identify 8 supported resource types', async () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    const { TemplateParser } = require('../../../src/core/parser');\n    \n    const parser = new TemplateParser();\n    const extractor = new ResourceExtractor();\n    \n    const mixedPath = path.join(tempDir, 'mixed-resources.json');\n    const template = await parser.parse(mixedPath);\n    const result = extractor.extract(template);\n    \n    // サポート対象リソースが正確に抽出されている確認\n    expect(result.supported.length).toBe(8); // 8個のサポート対象\n    expect(result.unsupported.length).toBe(6); // 6個の非対象（NLB、ECS EC2含む）\n    expect(result.totalCount).toBe(14);\n  });\n\n  // サポート対象外リソース集計テスト（GREEN段階: 機能確認）\n  it('should collect unsupported resource logical IDs', async () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    const { TemplateParser } = require('../../../src/core/parser');\n    \n    const parser = new TemplateParser();\n    const extractor = new ResourceExtractor();\n    \n    const mixedPath = path.join(tempDir, 'mixed-resources.json');\n    const template = await parser.parse(mixedPath);\n    const result = extractor.extract(template);\n    \n    // 非サポートリソースID確認\n    expect(result.unsupported).toContain('TestS3');\n    expect(result.unsupported).toContain('TestEC2');\n    expect(result.unsupported).toContain('TestVPC');\n    expect(result.unsupported).toContain('TestNLB'); // Network LB\n    expect(result.unsupported).toContain('TestECSServiceEC2'); // ECS EC2\n  });\n\n  // ECS Fargate判定テスト（GREEN段階: 特殊ケース確認）\n  it('should detect ECS Fargate services correctly', async () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    const { TemplateParser } = require('../../../src/core/parser');\n    \n    const parser = new TemplateParser();\n    const extractor = new ResourceExtractor();\n    \n    const ecsPath = path.join(tempDir, 'ecs-test.json');\n    const template = await parser.parse(ecsPath);\n    const result = extractor.extract(template);\n    \n    // Fargateサービスのみがサポート対象として抽出される  \n    const fargateServices = result.supported.filter(r => r.Type === 'AWS::ECS::Service');\n    expect(fargateServices.length).toBe(3); // Fargate + FargateSpot + MixedCapacity\n    \n    // EC2サービスはサポート対象外\n    expect(result.unsupported).toContain('EC2Service');\n  });\n\n  // ALB vs NLB判定テスト（GREEN段階: 判定ロジック確認）\n  it('should distinguish ALB from NLB correctly', async () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    const { TemplateParser } = require('../../../src/core/parser');\n    \n    const parser = new TemplateParser();\n    const extractor = new ResourceExtractor();\n    \n    const lbPath = path.join(tempDir, 'loadbalancer-test.json');\n    const template = await parser.parse(lbPath);\n    const result = extractor.extract(template);\n    \n    // Application LBのみがサポート対象\n    const supportedLBs = result.supported.filter(r => \n      r.Type === 'AWS::ElasticLoadBalancingV2::LoadBalancer'\n    );\n    expect(supportedLBs.length).toBe(2); // ApplicationLB + DefaultLB\n    \n    // Network LBとGateway LBはサポート対象外\n    expect(result.unsupported).toContain('NetworkLB');\n    expect(result.unsupported).toContain('GatewayLB');\n  });\n\n  // パフォーマンス監視テスト（GREEN段階: メトリクス確認）\n  it('should provide extraction time metrics', async () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    const { TemplateParser } = require('../../../src/core/parser');\n    \n    const parser = new TemplateParser();\n    const extractor = new ResourceExtractor();\n    \n    const mixedPath = path.join(tempDir, 'mixed-resources.json');\n    const template = await parser.parse(mixedPath);\n    const result = extractor.extract(template);\n    \n    expect(result.extractionTimeMs).toBeDefined();\n    expect(typeof result.extractionTimeMs).toBe('number');\n    expect(result.extractionTimeMs).toBeGreaterThanOrEqual(0); // 高速処理で0も許可\n  });\n\n  // 型安全性テスト（GREEN段階: ExtractResult型確認）\n  it('should return type-safe ExtractResult', async () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    const { TemplateParser } = require('../../../src/core/parser');\n    \n    const parser = new TemplateParser();\n    const extractor = new ResourceExtractor();\n    \n    const mixedPath = path.join(tempDir, 'mixed-resources.json');\n    const template = await parser.parse(mixedPath);\n    const result = extractor.extract(template);\n    \n    // ExtractResult型の構造確認\n    expect(result).toHaveProperty('supported');\n    expect(result).toHaveProperty('unsupported');\n    expect(result).toHaveProperty('totalCount');\n    expect(result).toHaveProperty('extractionTimeMs');\n    \n    expect(Array.isArray(result.supported)).toBe(true);\n    expect(Array.isArray(result.unsupported)).toBe(true);\n    expect(typeof result.totalCount).toBe('number');\n    expect(typeof result.extractionTimeMs).toBe('number');\n  });\n\n  // CLAUDE.md: No any types検証\n  it('should not use any types in extractor implementation', () => {\n    const extractorCode = readFileSync(\n      path.join(__dirname, '../../../src/core/extractor.ts'),\n      'utf8'\n    );\n    expect(extractorCode).toHaveNoAnyTypes();\n  });\n\n  // 単一責任原則テスト（GREEN段階: SOLID原則確認）\n  it('should follow single responsibility principle', () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    const extractor = new ResourceExtractor();\n    \n    // ResourceExtractorは抽出処理のみに特化\n    const publicMethods = Object.getOwnPropertyNames(Object.getPrototypeOf(extractor))\n      .filter(name => !name.startsWith('_') && name !== 'constructor' && typeof extractor[name] === 'function');\n    \n    // 主要メソッドは抽出関連のみ\n    expect(publicMethods).toContain('extract');\n    console.log('📝 Public methods:', publicMethods);\n    expect(publicMethods.length).toBeLessThanOrEqual(6); // extract + 内部メソッド等（適切範囲）\n  });\n});\n\ndescribe('ResourceExtractorパフォーマンステスト（CLAUDE.md: 性能要件）', () => {\n\n  // 大量リソース処理テスト（GREEN段階: 500リソース3秒以内）\n  it('should handle large templates efficiently', async () => {\n    const { ResourceExtractor, ExtractionPerformanceMonitor } = require('../../../src/core/extractor');\n    const { TemplateParser } = require('../../../src/core/parser');\n    \n    const parser = new TemplateParser();\n    const extractor = new ResourceExtractor();\n    \n    const largePath = path.join(tempDir, 'large-resources-500.json');\n    const template = await parser.parse(largePath);\n    \n    const performance = ExtractionPerformanceMonitor.measureExtractionPerformance(extractor, template);\n    \n    expect(performance.result.totalCount).toBe(500);\n    expect(performance.result.extractionTimeMs).toBeLessThan(3000); // 3秒以内\n    expect(performance.performanceGrade).not.toBe('F'); // 性能要件達成\n  });\n\n  // 並行抽出テスト（GREEN段階: 型安全並行処理）\n  it('should support concurrent extraction safely', async () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    const { TemplateParser } = require('../../../src/core/parser');\n    \n    const parser = new TemplateParser();\n    const extractor = new ResourceExtractor();\n    \n    const mixedPath = path.join(tempDir, 'mixed-resources.json');\n    const template = await parser.parse(mixedPath);\n    \n    // 同じテンプレートを並行抽出\n    const promises = Array(5).fill(null).map(() => \n      extractor.extract(template)\n    );\n    \n    const results = await Promise.all(promises);\n    \n    // 全て同じ結果が得られることを確認（状態汚染なし）\n    results.forEach(result => {\n      expect(result.totalCount).toBe(14);\n      expect(result.supported.length).toBe(8);\n    });\n  });\n\n  // メモリ効率テスト（GREEN段階: リークなし確認）\n  it('should extract resources without memory leaks', async () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    const { TemplateParser } = require('../../../src/core/parser');\n    \n    const parser = new TemplateParser();\n    const extractor = new ResourceExtractor();\n    \n    const mixedPath = path.join(tempDir, 'mixed-resources.json');\n    const template = await parser.parse(mixedPath);\n    \n    const memoryBefore = process.memoryUsage().heapUsed;\n    \n    // 100回抽出\n    for (let i = 0; i < 100; i++) {\n      extractor.extract(template);\n    }\n    \n    const memoryAfter = process.memoryUsage().heapUsed;\n    const memoryDelta = (memoryAfter - memoryBefore) / 1024 / 1024;\n    \n    expect(memoryDelta).toBeLessThan(20); // メモリ増加20MB以下\n  });\n\n  // パフォーマンス監視テスト（GREEN段階: 警告確認）\n  it('should warn when extraction exceeds time limits', async () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    \n    // 通常の処理では警告は出ない想定\n    const extractor = new ResourceExtractor();\n    const smallTemplate = {\n      AWSTemplateFormatVersion: \"2010-09-09\",\n      Resources: {\n        Test: { Type: \"AWS::RDS::DBInstance\", Properties: {} }\n      }\n    };\n    \n    const result = extractor.extract(smallTemplate);\n    expect(result.extractionTimeMs).toBeLessThan(100); // 小さなテンプレートは100ms以下\n  });\n});\n\ndescribe('ResourceExtractor型安全性（CLAUDE.md: Type-Driven Development）', () => {\n\n  // 型ガード関数統合テスト（GREEN段階: Don't Reinvent the Wheel）\n  it('should integrate with existing type guard functions', () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    const { isSupportedResource, isFargateService, isApplicationLoadBalancer } = require('../../../src/types/cloudformation');\n    \n    // 既存型ガード関数がResourceExtractorで使用されている確認\n    const testResource = { Type: 'AWS::RDS::DBInstance', Properties: {} };\n    \n    expect(isSupportedResource(testResource)).toBe(true);\n    expect(typeof isFargateService).toBe('function');\n    expect(typeof isApplicationLoadBalancer).toBe('function');\n    \n    // ResourceExtractor内部でこれらの関数が活用されている\n    const extractor = new ResourceExtractor();\n    expect(extractor).toBeDefined();\n  });\n\n  // Union型使用テスト（GREEN段階: SupportedResource確認）\n  it('should utilize SupportedResource union type', async () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    \n    const extractor = new ResourceExtractor();\n    const testTemplate = {\n      AWSTemplateFormatVersion: \"2010-09-09\",\n      Resources: {\n        TestRDS: { Type: \"AWS::RDS::DBInstance\", Properties: {} },\n        TestLambda: { Type: \"AWS::Lambda::Function\", Properties: {} }\n      }\n    };\n    \n    const result = extractor.extract(testTemplate);\n    \n    // SupportedResource Union型が正しく使用されている\n    expect(result.supported).toHaveLength(2);\n    result.supported.forEach(resource => {\n      expect(resource.LogicalId).toBeDefined();\n      expect(resource.Type).toBeDefined();\n    });\n  });\n\n  // CloudFormationTemplate型統合テスト（GREEN段階: 型推論確認）\n  it('should work with CloudFormationTemplate type', async () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    const { TemplateParser } = require('../../../src/core/parser');\n    \n    const parser = new TemplateParser();\n    const extractor = new ResourceExtractor();\n    \n    const tempDir = path.join(tmpdir(), 'aws-cloud-supporter-extractor-test');\n    const mixedPath = path.join(tempDir, 'mixed-resources.json');\n    \n    // CloudFormationTemplate型の正常解析・抽出\n    const template = await parser.parse(mixedPath);\n    const result = extractor.extract(template);\n    \n    // 型安全性確認\n    expect(template.Resources).toBeDefined();\n    expect(result.supported.every(r => typeof r.Type === 'string')).toBe(true);\n  });\n\n  // ExtractResult型安全性テスト（GREEN段階: 戻り値型確認）\n  it('should return properly typed ExtractResult', () => {\n    const { ResourceExtractor } = require('../../../src/core/extractor');\n    \n    const extractor = new ResourceExtractor();\n    const testTemplate = {\n      AWSTemplateFormatVersion: \"2010-09-09\",\n      Resources: {\n        Test: { Type: \"AWS::RDS::DBInstance\", Properties: {} }\n      }\n    };\n    \n    const result = extractor.extract(testTemplate);\n    \n    // ExtractResult型の完全性確認\n    expect(result.supported).toBeDefined();\n    expect(result.unsupported).toBeDefined();\n    expect(result.totalCount).toBe(1);\n    expect(result.extractionTimeMs).toBeGreaterThanOrEqual(0);\n    \n    // 型安全性：supported配列の要素がSupportedResource型\n    if (result.supported.length > 0) {\n      const resource = result.supported[0];\n      expect(resource.LogicalId).toBe('Test');\n      expect(resource.Type).toBe('AWS::RDS::DBInstance');\n    }\n  });\n});\n\n// RED段階用テストヘルパー（リソース抽出テスト用データ）\ndescribe('テストヘルパー準備（RED段階）', () => {\n  let tempDir: string;\n\n  beforeAll(() => {\n    tempDir = path.join(tmpdir(), 'aws-cloud-supporter-extractor-test');\n    try {\n      mkdirSync(tempDir, { recursive: true });\n    } catch {\n      // 既存の場合は無視\n    }\n    \n    // テストフィクスチャー作成\n    createExtractionTestFixtures();\n  });\n\n  function createExtractionTestFixtures() {\n    // 混在リソーステンプレート（サポート対象＋対象外）\n    const mixedResourcesTemplate = {\n      AWSTemplateFormatVersion: \"2010-09-09\",\n      Description: \"Mixed resources template for extraction testing\",\n      Resources: {\n        // サポート対象リソース\n        TestRDS: {\n          Type: \"AWS::RDS::DBInstance\",\n          Properties: { Engine: \"mysql\", DBInstanceClass: \"db.t3.micro\" }\n        },\n        TestLambda: {\n          Type: \"AWS::Lambda::Function\", \n          Properties: { Runtime: \"nodejs20.x\", Handler: \"index.handler\" }\n        },\n        TestServerlessFunction: {\n          Type: \"AWS::Serverless::Function\",\n          Properties: { Runtime: \"python3.11\", Handler: \"app.lambda_handler\" }\n        },\n        TestECSService: {\n          Type: \"AWS::ECS::Service\",\n          Properties: { LaunchType: \"FARGATE\", Cluster: \"test-cluster\" }\n        },\n        TestALB: {\n          Type: \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n          Properties: { Type: \"application\", Scheme: \"internet-facing\" }\n        },\n        TestDynamoDB: {\n          Type: \"AWS::DynamoDB::Table\",\n          Properties: { BillingMode: \"PAY_PER_REQUEST\" }\n        },\n        TestAPI: {\n          Type: \"AWS::ApiGateway::RestApi\",\n          Properties: { Name: \"test-api\" }\n        },\n        TestServerlessAPI: {\n          Type: \"AWS::Serverless::Api\",\n          Properties: { StageName: \"prod\" }\n        },\n        \n        // サポート対象外リソース  \n        TestS3: {\n          Type: \"AWS::S3::Bucket\",\n          Properties: { BucketName: \"test-bucket\" }\n        },\n        TestEC2: {\n          Type: \"AWS::EC2::Instance\",\n          Properties: { InstanceType: \"t3.micro\" }\n        },\n        TestVPC: {\n          Type: \"AWS::EC2::VPC\",\n          Properties: { CidrBlock: \"10.0.0.0/16\" }\n        },\n        TestSNS: {\n          Type: \"AWS::SNS::Topic\",\n          Properties: { TopicName: \"test-topic\" }\n        },\n        TestNLB: {\n          Type: \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n          Properties: { Type: \"network\", Scheme: \"internal\" }\n        },\n        TestECSServiceEC2: {\n          Type: \"AWS::ECS::Service\", \n          Properties: { LaunchType: \"EC2\", Cluster: \"test-cluster\" }\n        }\n      }\n    };\n\n    writeFileSync(\n      path.join(tempDir, 'mixed-resources.json'), \n      JSON.stringify(mixedResourcesTemplate, null, 2), \n      'utf8'\n    );\n\n    // 大量リソーステンプレート（パフォーマンステスト用）\n    const largeResourcesTemplate = {\n      AWSTemplateFormatVersion: \"2010-09-09\",\n      Description: \"Large resources template for performance testing\",\n      Resources: {} as Record<string, unknown>\n    };\n\n    // 500リソース生成（サポート対象150個 + 対象外350個）\n    for (let i = 0; i < 100; i++) {\n      // サポート対象リソース（100個）\n      largeResourcesTemplate.Resources[`RDS${i}`] = {\n        Type: \"AWS::RDS::DBInstance\",\n        Properties: { Engine: \"mysql\", DBInstanceClass: \"db.t3.micro\" }\n      };\n    }\n    \n    for (let i = 0; i < 50; i++) {\n      // サポート対象リソース（50個）\n      largeResourcesTemplate.Resources[`Lambda${i}`] = {\n        Type: \"AWS::Lambda::Function\",\n        Properties: { Runtime: \"nodejs20.x\" }\n      };\n    }\n\n    for (let i = 0; i < 350; i++) {\n      // サポート対象外リソース（350個）\n      largeResourcesTemplate.Resources[`S3${i}`] = {\n        Type: \"AWS::S3::Bucket\",\n        Properties: { BucketName: `test-bucket-${i}` }\n      };\n    }\n\n    writeFileSync(\n      path.join(tempDir, 'large-resources-500.json'),\n      JSON.stringify(largeResourcesTemplate, null, 2),\n      'utf8'\n    );\n\n    // ECS特殊ケーステンプレート\n    const ecsTestTemplate = {\n      AWSTemplateFormatVersion: \"2010-09-09\",\n      Resources: {\n        FargateService: {\n          Type: \"AWS::ECS::Service\",\n          Properties: { LaunchType: \"FARGATE\" }\n        },\n        EC2Service: {\n          Type: \"AWS::ECS::Service\", \n          Properties: { LaunchType: \"EC2\" }\n        },\n        FargateSpotService: {\n          Type: \"AWS::ECS::Service\",\n          Properties: {\n            CapacityProviderStrategy: [\n              { CapacityProvider: \"FARGATE_SPOT\", Weight: 1 }\n            ]\n          }\n        },\n        MixedCapacityService: {\n          Type: \"AWS::ECS::Service\",\n          Properties: {\n            CapacityProviderStrategy: [\n              { CapacityProvider: \"FARGATE\", Weight: 1 },\n              { CapacityProvider: \"EC2\", Weight: 1 }\n            ]\n          }\n        }\n      }\n    };\n\n    writeFileSync(\n      path.join(tempDir, 'ecs-test.json'),\n      JSON.stringify(ecsTestTemplate, null, 2),\n      'utf8'\n    );\n\n    // ALB/NLB判定テンプレート\n    const loadBalancerTestTemplate = {\n      AWSTemplateFormatVersion: \"2010-09-09\",\n      Resources: {\n        ApplicationLB: {\n          Type: \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n          Properties: { Type: \"application\" }\n        },\n        NetworkLB: {\n          Type: \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n          Properties: { Type: \"network\" }\n        },\n        DefaultLB: {\n          Type: \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n          Properties: { Scheme: \"internet-facing\" } // Typeなし=application\n        },\n        GatewayLB: {\n          Type: \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n          Properties: { Type: \"gateway\" }\n        }\n      }\n    };\n\n    writeFileSync(\n      path.join(tempDir, 'loadbalancer-test.json'),\n      JSON.stringify(loadBalancerTestTemplate, null, 2),\n      'utf8'\n    );\n  }\n\n  // テストフィクスチャー作成確認\n  it('should create mixed resources test fixture', () => {\n    const mixedPath = path.join(tempDir, 'mixed-resources.json');\n    const content = JSON.parse(readFileSync(mixedPath, 'utf8'));\n    \n    expect(content.Resources).toBeDefined();\n    expect(Object.keys(content.Resources)).toHaveLength(14);\n  });\n\n  it('should create large resources test fixture', () => {\n    const largePath = path.join(tempDir, 'large-resources-500.json');\n    const content = JSON.parse(readFileSync(largePath, 'utf8'));\n    \n    expect(content.Resources).toBeDefined();\n    expect(Object.keys(content.Resources)).toHaveLength(500);\n  });\n\n  it('should create ECS test cases fixture', () => {\n    const ecsPath = path.join(tempDir, 'ecs-test.json');\n    const content = JSON.parse(readFileSync(ecsPath, 'utf8'));\n    \n    expect(content.Resources.FargateService).toBeDefined();\n    expect(content.Resources.EC2Service).toBeDefined();\n    expect(content.Resources.FargateSpotService).toBeDefined();\n  });\n\n  it('should create Load Balancer test cases fixture', () => {\n    const lbPath = path.join(tempDir, 'loadbalancer-test.json');\n    const content = JSON.parse(readFileSync(lbPath, 'utf8'));\n    \n    expect(content.Resources.ApplicationLB).toBeDefined();\n    expect(content.Resources.NetworkLB).toBeDefined();\n    expect(content.Resources.DefaultLB).toBeDefined();\n  });\n});"],"version":3}