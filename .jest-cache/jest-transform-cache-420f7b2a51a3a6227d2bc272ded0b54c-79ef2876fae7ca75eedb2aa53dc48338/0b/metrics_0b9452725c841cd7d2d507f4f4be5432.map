{"file":"/home/kyohei/aws_cloud_supporter/src/types/metrics.ts","mappings":"","names":[],"sources":["/home/kyohei/aws_cloud_supporter/src/types/metrics.ts"],"sourcesContent":["// CLAUDE.md準拠メトリクス型定義（Type-Driven Development、any型完全排除）\nimport { CloudFormationResource } from './cloudformation';\nimport { \n  MetricStatistic, \n  MetricCategory, \n  ImportanceLevel, \n  EvaluationPeriod, \n  TimestampISO,\n  PerformanceMetrics \n} from './common';\n\n// =============================================================================\n// メトリクス定義型（CLAUDE.md: 厳密型定義）\n// =============================================================================\n\nexport interface MetricDefinition {\n  metric_name: string;\n  namespace: string;\n  unit: string;\n  description: string;\n  statistic: MetricStatistic;\n  recommended_threshold: ThresholdDefinition;\n  evaluation_period: EvaluationPeriod;\n  category: MetricCategory;\n  importance: ImportanceLevel;\n  dimensions?: MetricDimension[];\n}\n\nexport interface ThresholdDefinition {\n  warning: number;\n  critical: number;\n}\n\nexport interface MetricDimension {\n  name: string;\n  value: string;\n}\n\n// =============================================================================\n// メトリクス設定型（設定ファイル用）\n// =============================================================================\n\nexport interface MetricConfig {\n  name: string;\n  namespace: string;\n  unit: string;\n  description: string;\n  statistic: MetricStatistic;\n  evaluationPeriod: EvaluationPeriod;\n  category: MetricCategory;\n  importance: ImportanceLevel;\n  threshold: ThresholdConfig;\n  applicableWhen?: ResourceConditionFunction;\n}\n\nexport interface ThresholdConfig {\n  base: number;\n  warningMultiplier: number;\n  criticalMultiplier: number;\n}\n\n// 型安全な条件判定関数（CLAUDE.md: Type-Driven）\nexport type ResourceConditionFunction = (resource: CloudFormationResource) => boolean;\n\n// =============================================================================\n// 分析結果型（requirement.mdスキーマ準拠）\n// =============================================================================\n\nexport interface AnalysisResult {\n  metadata: AnalysisMetadata;\n  resources: ResourceWithMetrics[];\n  unsupported_resources: string[];\n}\n\nexport interface AnalysisMetadata {\n  version: '1.0.0';\n  generated_at: TimestampISO;\n  template_path: string;\n  total_resources: number;\n  supported_resources: number;\n  processing_time_ms?: number;\n}\n\nexport interface ResourceWithMetrics {\n  logical_id: string;\n  resource_type: string;\n  resource_properties: Record<string, unknown>; // any型ではなくunknown\n  metrics: MetricDefinition[];\n}\n\n// =============================================================================\n// テンプレート解析結果型\n// =============================================================================\n\nexport interface TemplateAnalysisResult {\n  template: import('./cloudformation').CloudFormationTemplate;\n  supportedResources: import('./cloudformation').SupportedResource[];\n  unsupportedResources: string[];\n  totalResources: number;\n  extractionTimeMs: number;\n}\n\nexport interface ExtractResult {\n  supported: import('./cloudformation').SupportedResource[];\n  unsupported: string[]; // logical IDs\n  totalCount: number;\n  extractionTimeMs: number;\n}\n\n// =============================================================================\n// 出力フォーマッタ型\n// =============================================================================\n\nexport type OutputFormat = 'json' | 'html' | 'yaml';\n\nexport interface JSONOutputData {\n  metadata: AnalysisMetadata;\n  resources: Array<{\n    logical_id: string;\n    resource_type: string;\n    resource_properties: Record<string, unknown>;\n    metrics: Array<{\n      metric_name: string;\n      namespace: string;\n      unit: string;\n      description: string;\n      statistic: MetricStatistic;\n      recommended_threshold: {\n        warning: number;\n        critical: number;\n      };\n      evaluation_period: number;\n      category: MetricCategory;\n      importance: ImportanceLevel;\n    }>;\n  }>;\n  unsupported_resources: string[];\n}\n\n// =============================================================================\n// CLI関連型（型安全性）\n// =============================================================================\n\nexport interface CLIOptions {\n  output: OutputFormat;\n  file?: string;\n  resourceTypes?: string;\n  includeLow?: boolean;\n  verbose?: boolean;\n  noColor?: boolean;\n}\n\nexport interface ProcessOptions {\n  includeLowImportance: boolean;\n  resourceTypes?: string[];\n  verbose: boolean;\n}\n\n// =============================================================================\n// インターフェース分離（CLAUDE.md: Interface Segregation Principle）\n// =============================================================================\n\nexport interface ITemplateParser {\n  parse(filePath: string): Promise<import('./cloudformation').CloudFormationTemplate>;\n}\n\nexport interface ITemplateAnalyzer {\n  analyze(filePath: string): Promise<TemplateAnalysisResult>;\n}\n\nexport interface IMetricsGenerator {\n  getSupportedTypes(): string[];\n  generate(resource: CloudFormationResource): Promise<MetricDefinition[]>;\n}\n\nexport interface IMetricsProcessor {\n  process(resources: import('./cloudformation').SupportedResource[], options: ProcessOptions): Promise<ResourceWithMetrics[]>;\n}\n\nexport interface IJSONFormatter {\n  formatJSON(result: AnalysisResult): Promise<string>;\n}\n\nexport interface IHTMLFormatter {\n  formatHTML(result: AnalysisResult): Promise<string>;\n}\n\n// 複合インターフェース（必要最小限）\nexport interface IOutputFormatter extends IJSONFormatter, IHTMLFormatter {\n  // 両フォーマッタの統合インターフェース\n}\n\nexport interface ILogger {\n  debug(message: string, ...args: unknown[]): void;\n  info(message: string, ...args: unknown[]): void;\n  warn(message: string, ...args: unknown[]): void;\n  error(message: string, error?: Error, ...args: unknown[]): void;\n  success(message: string, ...args: unknown[]): void;\n}"],"version":3}