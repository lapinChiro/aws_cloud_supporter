{"file":"/home/kyohei/aws_cloud_supporter/src/generators/base.generator.ts","mappings":"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","names":[],"sources":["/home/kyohei/aws_cloud_supporter/src/generators/base.generator.ts"],"sourcesContent":["// CLAUDE.md準拠BaseMetricsGenerator（SOLID抽象化原則 + Type-Driven Development）\n\nimport { CloudFormationResource } from '../types/cloudformation';\nimport { MetricDefinition, MetricConfig, IMetricsGenerator } from '../types/metrics';\nimport { ILogger } from '../utils/logger';\nimport { createResourceError } from '../utils/error';\n\n// SOLID原則: 抽象化による拡張性確保（Open/Closed Principle）\nexport abstract class BaseMetricsGenerator implements IMetricsGenerator {\n  \n  constructor(protected logger: ILogger) {}\n\n  // 抽象メソッド群（SOLID: Interface Segregation）\n  abstract getSupportedTypes(): string[];\n  protected abstract getMetricsConfig(resource: CloudFormationResource): MetricConfig[];\n  protected abstract getResourceScale(resource: CloudFormationResource): number;\n\n  // メイン生成メソッド（CLAUDE.md: Type-Driven Development）\n  async generate(resource: CloudFormationResource): Promise<MetricDefinition[]> {\n    const startTime = performance.now();\n    \n    try {\n      // 型安全なリソース検証\n      this.validateResource(resource);\n      \n      // 適用可能メトリクス決定\n      const applicableConfigs = this.getApplicableMetrics(resource);\n      \n      // メトリクス定義生成（型安全性重視）\n      const metrics = applicableConfigs.map(config => \n        this.buildMetricDefinition(resource, config)\n      );\n\n      const duration = performance.now() - startTime;\n      \n      // パフォーマンス監視（CLAUDE.md: 性能要件）\n      if (duration > 1000) {\n        this.logger.warn(`Metrics generation slow: ${duration.toFixed(0)}ms for ${this.getResourceId(resource)}`);\n      } else {\n        this.logger.debug(`Generated ${metrics.length} metrics for ${this.getResourceId(resource)} in ${duration.toFixed(1)}ms`);\n      }\n\n      return metrics;\n    } catch (error) {\n      const resourceId = this.getResourceId(resource);\n      this.logger.error(`Failed to generate metrics for ${resourceId}`, error as Error);\n      throw createResourceError(\n        `Metrics generation failed for ${resourceId}: ${(error as Error).message}`,\n        { resourceType: resource.Type, originalError: (error as Error).message }\n      );\n    }\n  }\n\n  // 適用可能メトリクス判定（Type-Driven Development）\n  private getApplicableMetrics(resource: CloudFormationResource): MetricConfig[] {\n    const allConfigs = this.getMetricsConfig(resource);\n    \n    return allConfigs.filter(config => {\n      if (!config.applicableWhen) {\n        return true; // 条件なしは全て適用\n      }\n      \n      try {\n        return config.applicableWhen(resource);\n      } catch (error) {\n        this.logger.warn(`Failed to evaluate metric condition: ${config.name}`, error as Error);\n        return false; // 評価失敗時は適用しない\n      }\n    });\n  }\n\n  // メトリクス定義構築（型安全性重視）\n  private buildMetricDefinition(\n    resource: CloudFormationResource,\n    config: MetricConfig\n  ): MetricDefinition {\n    const threshold = this.calculateThreshold(resource, config);\n    \n    return {\n      metric_name: config.name,\n      namespace: config.namespace,\n      unit: config.unit,\n      description: config.description,\n      statistic: config.statistic,\n      recommended_threshold: threshold,\n      evaluation_period: config.evaluationPeriod,\n      category: config.category,\n      importance: config.importance,\n      dimensions: this.buildDimensions(resource, config)\n    };\n  }\n\n  // 動的しきい値計算（CLAUDE.md: アルゴリズム実装）\n  private calculateThreshold(\n    resource: CloudFormationResource,\n    config: MetricConfig\n  ): { warning: number; critical: number } {\n    // リソーススケール係数取得\n    const scale = this.getResourceScale(resource);\n    const base = config.threshold.base;\n    \n    // 動的計算（CLAUDE.md: Type-Driven Development）\n    const warning = Math.round(base * scale * config.threshold.warningMultiplier);\n    const critical = Math.round(base * scale * config.threshold.criticalMultiplier);\n    \n    // しきい値妥当性検証（warning < critical）\n    if (warning >= critical) {\n      this.logger.warn(`Invalid threshold calculation: warning=${warning} >= critical=${critical} for ${config.name}`);\n      \n      // 自動修正（critical = warning * 1.5）\n      const correctedCritical = Math.round(warning * 1.5);\n      this.logger.info(`Auto-corrected critical threshold: ${critical} → ${correctedCritical}`);\n      \n      return {\n        warning,\n        critical: correctedCritical\n      };\n    }\n    \n    return { warning, critical };\n  }\n\n  // CloudWatchディメンション構築（AWS仕様準拠）\n  private buildDimensions(\n    resource: CloudFormationResource,\n    config: MetricConfig\n  ): Array<{ name: string; value: string }> {\n    const resourceId = this.getResourceId(resource);\n    const primaryDimension = this.getPrimaryDimensionName(resource.Type);\n    \n    return [\n      {\n        name: primaryDimension,\n        value: resourceId\n      }\n    ];\n  }\n\n  // リソースタイプ別プライマリディメンション（AWS CloudWatch仕様）\n  private getPrimaryDimensionName(resourceType: string): string {\n    const dimensionMap: Record<string, string> = {\n      'AWS::RDS::DBInstance': 'DBInstanceIdentifier',\n      'AWS::Lambda::Function': 'FunctionName',\n      'AWS::Serverless::Function': 'FunctionName',\n      'AWS::ECS::Service': 'ServiceName',\n      'AWS::ElasticLoadBalancingV2::LoadBalancer': 'LoadBalancer',\n      'AWS::DynamoDB::Table': 'TableName',\n      'AWS::ApiGateway::RestApi': 'ApiName',\n      'AWS::Serverless::Api': 'ApiName'\n    };\n    \n    return dimensionMap[resourceType] ?? 'ResourceId';\n  }\n\n  // 型安全なリソースID取得\n  private getResourceId(resource: CloudFormationResource): string {\n    // LogicalIdプロパティの型安全取得\n    const resourceWithId = resource as CloudFormationResource & { LogicalId?: string };\n    return resourceWithId.LogicalId ?? 'UnknownResource';\n  }\n\n  // リソース基本検証（型安全性）\n  private validateResource(resource: CloudFormationResource): void {\n    if (!resource.Type || typeof resource.Type !== 'string') {\n      throw createResourceError(\n        'Resource must have a valid Type property',\n        { resourceData: JSON.stringify(resource) }\n      );\n    }\n\n    if (!this.getSupportedTypes().includes(resource.Type)) {\n      throw createResourceError(\n        `Unsupported resource type: ${resource.Type}`,\n        { \n          resourceType: resource.Type,\n          supportedTypes: this.getSupportedTypes()\n        }\n      );\n    }\n  }\n}\n\n// メトリクス生成統計情報（CLAUDE.md: 監視・デバッグ支援）\nexport interface GenerationStats {\n  resourceType: string;\n  metricsGenerated: number;\n  generationTimeMs: number;\n  averageThresholdWarning: number;\n  averageThresholdCritical: number;\n}\n\n// パフォーマンス測定ヘルパー（CLAUDE.md: 単一責任分離）\nexport class MetricsGenerationMonitor {\n  \n  static async measureGenerationPerformance<T extends BaseMetricsGenerator>(\n    generator: T,\n    resource: CloudFormationResource\n  ): Promise<{\n    metrics: MetricDefinition[];\n    stats: GenerationStats;\n    performanceGrade: 'A' | 'B' | 'C' | 'F';\n  }> {\n    const startTime = performance.now();\n    const memoryBefore = process.memoryUsage().heapUsed;\n    \n    const metrics = await generator.generate(resource);\n    \n    const duration = performance.now() - startTime;\n    const memoryAfter = process.memoryUsage().heapUsed;\n    const memoryDelta = (memoryAfter - memoryBefore) / 1024 / 1024;\n\n    // 統計情報計算\n    const stats: GenerationStats = {\n      resourceType: resource.Type,\n      metricsGenerated: metrics.length,\n      generationTimeMs: Math.round(duration),\n      averageThresholdWarning: metrics.reduce((sum, m) => sum + m.recommended_threshold.warning, 0) / metrics.length,\n      averageThresholdCritical: metrics.reduce((sum, m) => sum + m.recommended_threshold.critical, 0) / metrics.length\n    };\n\n    // パフォーマンス評価\n    let performanceGrade: 'A' | 'B' | 'C' | 'F';\n    if (duration < 100 && memoryDelta < 1) {\n      performanceGrade = 'A'; // 100ms以下、メモリ1MB以下\n    } else if (duration < 500 && memoryDelta < 5) {\n      performanceGrade = 'B'; // 500ms以下、メモリ5MB以下\n    } else if (duration < 1000 && memoryDelta < 10) {\n      performanceGrade = 'C'; // 1秒以下、メモリ10MB以下\n    } else {\n      performanceGrade = 'F'; // 要件超過\n    }\n\n    return {\n      metrics,\n      stats,\n      performanceGrade\n    };\n  }\n}\n\n// 型安全なメトリクス検証（CLAUDE.md: Type-Driven Development）\nexport function validateMetricDefinition(metric: MetricDefinition): {\n  isValid: boolean;\n  errors: string[];\n} {\n  const errors: string[] = [];\n\n  // 必須フィールド検証\n  if (!metric.metric_name || typeof metric.metric_name !== 'string') {\n    errors.push('metric_name must be a non-empty string');\n  }\n  \n  if (!metric.namespace || typeof metric.namespace !== 'string') {\n    errors.push('namespace must be a non-empty string');\n  }\n\n  // しきい値妥当性検証（カスタムマッチャーと同じロジック）\n  const threshold = metric.recommended_threshold;\n  if (threshold.warning >= threshold.critical) {\n    errors.push(`Invalid threshold: warning(${threshold.warning}) >= critical(${threshold.critical})`);\n  }\n\n  if (threshold.warning <= 0 || threshold.critical <= 0) {\n    errors.push('Thresholds must be positive numbers');\n  }\n\n  // 評価期間検証\n  const validPeriods = [60, 300, 900, 3600]; // CloudWatch標準期間\n  if (!validPeriods.includes(metric.evaluation_period)) {\n    errors.push(`Invalid evaluation_period: ${metric.evaluation_period}. Valid: ${validPeriods.join(', ')}`);\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n}"],"version":3}